pr: [master]

trigger: [master]

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      yarn
    displayName: Install dependencies

  # - script: |
  #     yarn lint
  #   displayName: Lint

  # - script: |
  #     yarn prettier
  #   displayName: Prettier

  # - script: |
  #     yarn test
  #   displayName: Unit tests

  # - script: |
  #     bash <(curl -s https://codecov.io/bash)
  #   displayName: Report coverage

  # - script: |
  #     yarn test:e2e
  #   displayName: E2E tests

  - script: |
      yarn test:projects
    displayName: Project tests

  # - script: |
  #     yarn test:circulars
  #   displayName: Circular dependency tests

  - script: |
      yarn just perf-test
    displayName: Perf Test
    workingDirectory: packages/perf-test
    
  # - task: AzureUpload@1
  #   displayName: Upload Perf Test Result to PR deploy site
  #   inputs:
  #     SourcePath: 'apps/perf-test/dist'
  #     azureSubscription: 'UI Fabric (bac044cf-49e1-4843-8dda-1ce9662606c8)'
  #     storage: fabricweb
  #     ContainerName: '$web'
  #     BlobPrefix: 'pr-deploy-site/$(Build.SourceBranch)/perf-test'

  # - task: GithubPRComment@0
  #   displayName: 'Post Perf Results to Github Pull Request'
  #   inputs:
  #     githubOwner: OfficeDev
  #     githubRepo: 'office-ui-fabric-react'
  #     blobFilePath: '$(Build.SourcesDirectory)/$(PerfCommentFilePath)'
  #     status: '$(PerfCommentStatus)'
  #     uniqueId: 'perfComment9423'

  - script: |
      if [ $BUILD_SOURCEBRANCHNAME == 'master' ]; then
        yarn stats:build
      else
        echo 'skip bundle statistics collection'
      fi
    displayName: Bundle statistics (master only)

  - script: |
      if [ $BUILD_SOURCEBRANCHNAME == 'master' ]; then
        yarn perf
      else
        echo "Skipping performance tests"
      fi
    displayName: Performance tests (master only)

  - script: |
      if [ $BUILD_SOURCEBRANCHNAME == 'master' ]; then
        yarn stats:save --tag=`git tag --points-at HEAD`
      else
        echo 'skip saving statistics'
      fi
    env:
      STATS_URI: $(statsUri)
    displayName: Save statistics to DB (master only)

  - script: |
      if [ $BUILD_REASON == "PullRequest" ] && [ ! -z $DANGER_GITHUB_API_TOKEN ]; then
        yarn danger ci
      elif [ $BUILD_REASON != "PullRequest" ]; then
        echo "Skipping Danger JS because BUILD_REASON ${BUILD_REASON} != PullRequest"
      else
        echo "Skipping Danger JS because API token wasn't found"
      fi
    env:
      DANGER_GITHUB_API_TOKEN: $(dangerKey)
    displayName: Danger JS
